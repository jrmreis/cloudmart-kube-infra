# Backend Dockerfile
# Generated by Ansible on {{ ansible_date_time.iso8601 }}

FROM node:18-alpine

# Set working directory
WORKDIR /app

# Copy package files (if they exist)
COPY package*.json ./

# Install dependencies with fallback
RUN if [ -f package-lock.json ]; then \
      npm ci --omit=dev; \
    elif [ -f package.json ]; then \
      npm install --omit=dev; \
    else \
      echo '{"name":"cloudmart-backend","version":"1.0.0","main":"index.js","scripts":{"start":"node index.js"},"dependencies":{"express":"^4.18.2"}}' > package.json && \
      npm install --omit=dev; \
    fi

# Copy application code
COPY . .

# Create default index.js if it doesn't exist
RUN if [ ! -f index.js ]; then \
      echo 'const express = require("express"); const app = express(); const port = process.env.PORT || 5000; app.get("/", (req, res) => res.json({message: "CloudMart Backend"})); app.get("/health", (req, res) => res.json({status: "healthy"})); app.listen(port, () => console.log(`Server running on port ${port}`));' > index.js; \
    fi

# Copy environment file
COPY .env .env

# Expose port
EXPOSE {{ app_backend_port | default(5000) }}

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget -qO- http://localhost:{{ app_backend_port | default(5000) }}/health || exit 1

# Start the application
CMD ["npm", "start"]
